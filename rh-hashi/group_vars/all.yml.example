---
# Override these role variables to attach a RHEL subscription to the Vault RHEL server
#vault_provision_redhat_subscription: true
#vault_provision_redhat_username: user@example.com
#vault_provision_redhat_password: CHANGEME

# Override this role variable to point to your local Vault license file
#vault_install_vault_license_file: /tmp/vault.hclic

# Override these role variables to point to user-provided cert/key files
#vault_install_tls_cert: /path/to/cert.pem
#vault_install_tls_key: /path/to/key.pem

# Override these role variables to attach a RHEL subscription to the AAP RHEL server
#aap_provision_redhat_subscription: false
#aap_provision_redhat_subscription_manifest: false
#aap_provision_redhat_username: user@example.com
#aap_provision_redhat_password: CHANGEME
#aap_provision_redhat_pool: CHANGEME

# Change this to change the default password for AAP
aap_install_common_password: CHANGEME

# Override these role variables to install user-provided CA certs to the system trust store
#aap_install_provide_certs: false
#aap_install_custom_ca_cert: "custom-ca.crt"

# Override these role variables to attach a RHEL subscription to the GitLab RHEL server
#gitlab_provision_redhat_subscription: false
#gitlab_provision_redhat_username: user@example.com
#gitlab_provision_redhat_password: CHANGEME

# Set the GitLab admin password here
gitlab_install_password: CHANGEME

# Override these role variables to install user-provided CA certs to the system trust store
#gitlab_install_provide_certs: false

# Override these role variables to attach a RHEL subscription to the Terraform RHEL server
#terraform_provision_redhat_subscription: false
#terraform_provision_redhat_username: user@example.com
#terraform_provision_redhat_password: CHANGEME

# Override this role variable to point to your local Terraform license file
terraform_install_license_file: /tmp/terraform.hclic

# Set the Terraform admin password here
terraform_install_password: CHANGEME


terraform:
  license: <terraform license key>.hclic
  dir: "{{ ansible_user_dir }}/terraform"
  certdir: "{{ ansible_user_dir }}/terraform/certs"

aap:
  dir: "/home/aap/aap"
  certdir: /home/aap/aap/certs
  installer: ansible-automation-platform-containerized-setup-bundle-2.5-11.1-x86_64.tar.gz # or current ansible containerized bundle installer
  user: aap
  group: aap
  admin_pass: <ansible admin password>
  validate_certs: true

installer_extracted: "{{ aap.installer | regex_replace('\\.tar.gz$', '') }}"

local:
  certdir: "/tmp/target"

vault:
  domain: your.domain.name # replace the next three with your FQDN
  intermediate_name: your-domain-name # FQDN with - instead of .
  resource_name: your_domain_name # FQDN with _ instead of .
  unseal:
    key_count: 5
    threshold: 3
  dir:
    root_token: /root/.vault
    unseal_key: /root/.vault

...
