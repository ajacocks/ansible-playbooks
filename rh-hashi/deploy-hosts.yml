---

- name: Provision Terraform for AAP-HashiCorp integrated demo
  hosts: localhost
  tags: infrastructure

  vars:
    ec2_priv_keyfile: "{{ playbook_dir }}/ec2_privkey.pem"

  tasks:

    - name: Check to see if terraform is in the path
      ansible.builtin.command: terraform version
      register: terraform_path
      changed_when: false

    - name: If terraform_path.rc != 0, let the user know that terraform isn't installed and exit
      ansible.builtin.fail:
        msg: Terraform isn't installed. Please install Terraform before proceeding.
      when: terraform_path.rc != 0

    # - name: Create a temporary file with the suffix .tf
    #   ansible.builtin.tempfile:
    #     path: "{{ playbook_dir }}"
    #     state: file
    #     suffix: .tf
    #   register: temp_tf

    # - name: Debug ec2_keypair when debug is defined, default false
    #   ansible.builtin.debug:
    #     var: temp_tf
    #   when: debug | default(false)

    # - name: Template main.tf.j2 to a temporary file name in the current directory
    #   ansible.builtin.template:
    #     src: templates/main.tf.j2
    #     dest: "{{ temp_tf.path }}"
    #     force: true
    #     mode: '0644'

    - name: Template main.tf.j2 to a temporary file name in the current directory
      ansible.builtin.template:
        src: templates/main.tf.j2
        dest: "{{ playbook_dir }}/main.tf"
        force: true
        mode: '0644'

    - name: Check to see if the file exists {{ ec2_priv_keyfile }}
      ansible.builtin.stat:
        path: "{{ ec2_priv_keyfile }}"
      register: ec2_keypair

    - name: Debug ec2_keypair when debug is defined, default false
      ansible.builtin.debug:
        var: ec2_keypair
      when: debug | default(false)

    - name: Create a new EC2 keypair, if one doesn't exist
      when: not ec2_keypair.stat.exists
      block:

        - name: Create a new EC2 key pair, returns generated private key
          amazon.aws.ec2_key:
            name: rh_hashi_keypair
#          no_log: true
          register: aws_ec2_key_pair

        - name: Write aws_ec2_key_pair.key.private_key to {{ ec2_priv_keyfile }}
          ansible.builtin.copy:
            dest: "{{ ec2_priv_keyfile }}"
            content: "{{ aws_ec2_key_pair.key.private_key }}"
            mode: '0600'
          no_log: true

    - name: Deploy hosts to AWS
      community.general.terraform:
        project_path: "{{ playbook_dir }}"
        force_init: true
        state: present
      register: tf_hosts_result

    - name: Debug terraform apply
      ansible.builtin.debug:
        var: tf_hosts_result
      when: debug | default(false)

    - name: Debug host names
      ansible.builtin.debug:
        var: tf_hosts_result.outputs.instance_dns_names.value
      when: debug | default(false)

    - name: Debug ip addresses
      ansible.builtin.debug:
        var: tf_hosts_result.outputs.instance_public_ips.value
      when: debug | default(false)

    - name: Set fact terraform_host
      ansible.builtin.set_fact:
        terraform_host: "{{ tf_hosts_result.outputs.instance_dns_names.value | select('match', 'terraform.*') | list | first }}"

    - name: Set fact aap_host
      ansible.builtin.set_fact:
        aap_host: "{{ tf_hosts_result.outputs.instance_dns_names.value | select('match', 'aap.*') | list | first }}"

    - name: Set fact gitlab_host
      ansible.builtin.set_fact:
        gitlab_host: "{{ tf_hosts_result.outputs.instance_dns_names.value | select('match', 'gitlab.*') | list | first }}"

    - name: Set fact vault_host
      ansible.builtin.set_fact:
        vault_host: "{{ tf_hosts_result.outputs.instance_dns_names.value | select('match', 'vault.*') | list | first }}"

    - name: Debug hosts list
      ansible.builtin.debug:
        msg:
          - 'terraform_host: {{ terraform_host }}'
          - 'aap_host: {{ aap_host }}'
          - 'gitlab_host: {{ gitlab_host }}'
          - 'vault_host: {{ vault_host }}'
      when: debug | default(false)

    - name: Template inventory.j2 to playbook_dir/inventory
      ansible.builtin.template:
        src: templates/inventory.j2
        dest: '{{ playbook_dir }}/inventory'
        force: true
        mode: '0644'

...
