---

- name: Read in the admin login file
  block:

    - name: Get the status of the file {{ terraform_install_admin_login }}
      register: admin_login_file
      ansible.builtin.stat:
        path: "{{ terraform_install_admin_login }}"

    - name: Debug file status
      ansible.builtin.debug:
        var: admin_login_file
      when: debug | default(false)

    - name: Read in the admin login file from the terraform host
      ansible.builtin.slurp:
        src: "{{ terraform_install_admin_login }}"
      register: admin_login_file_b64

    - name: Register b64 decoded admin_login_file_b64 as admin credential
      ansible.builtin.set_fact:
        admin_login: "{{ admin_login_file_b64['content'] | b64decode }}"

- name: Check to see if admin organization already exists
  ignore_errors: true
  ansible.builtin.uri:
    url: "https://terraform.{{ install_domain }}/api/v2/organizations/{{ terraform_install_admin_orgname }}"
    method: GET
    headers:
      Content-Type: application/vnd.api+json
      Authorization: Bearer {{ admin_login }}
    body_format: json
    status_code:
      - 200
  register: admin_org_exists

- name: Debug admin_org_exists
  ansible.builtin.debug:
    msg: "{{ admin_org_exists }}"
  when: debug | default(false)

- name: Create admin organization
  when: ( admin_login_file.stat.exists | bool ) and ( admin_org_exists.failed )
  block:

    - name: Create Organization using Admin Token
      ansible.builtin.uri:
        url: "https://terraform.{{ install_domain }}/api/v2/organizations"
        method: POST
        headers:
          Content-Type: application/vnd.api+json
          Authorization: "Bearer {{ admin_login }}"
        body:
          data:
            type: "organizations"
            attributes:
              name: "{{ terraform_install_admin_orgname }}"
              email: "{{ terraform_install_admin_email }}"
        # body: '{ "data": { "type": "organizations", "attributes": { "name": "{{ terraform_install_admin_orgname }}", "email": "{{ terraform_install_admin_email }}" } } }'
        body_format: json
        status_code: 201
      register: create_org

    - name: Debug organization creation
      ansible.builtin.debug:
        msg: "{{ create_org }}"
      when: debug | default(false)

- name: Check to see if admin workspace already exists
  ignore_errors: true
  ansible.builtin.uri:
    url: "https://terraform.{{ install_domain }}/api/v2/organizations/{{ terraform_install_admin_orgname }}/workspaces/{{ terraform_install_admin_workspacename }}"
    method: GET
    headers:
      Content-Type: application/vnd.api+json
      Authorization: Bearer {{ admin_login }}
    body_format: json
    status_code:
      - 200
  register: admin_ws_exists

- name: Debug admin_ws_exists
  ansible.builtin.debug:
    msg: "{{ admin_ws_exists }}"
  when: debug | default(false)

- name: Create admin workspace
  when: ( admin_login_file.stat.exists | bool ) and ( admin_ws_exists.failed )
  block:

    - name: Create workspace for admin organization
      ansible.builtin.uri:
        url: "https://terraform.{{ install_domain }}/api/v2/organizations/{{ terraform_install_admin_orgname }}/workspaces"
        method: POST
        headers:
          Content-Type: application/vnd.api+json
          Authorization: "Bearer {{ admin_login }}"
        body:
          data:
            attributes:
              name: "{{ terraform_install_admin_workspacename }}"
            type: "workspaces"
        body_format: json
        status_code: 201
      register: create_workspace

    - name: Debug workspace creation
      ansible.builtin.debug:
        msg: "{{ create_workspace }}"
      when: debug | default(false)

...
